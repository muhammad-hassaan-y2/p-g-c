generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model block {
  id        String @id
  blockerId String
  blockedId String

  @@unique([blockerId, blockedId], map: "Block_blockerId_blockedId_key")
  @@index([blockedId], map: "Block_blockedId_idx")
  @@index([blockerId], map: "Block_blockerId_idx")
}

model follow {
  id          String   @id
  followerId  String
  followingId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@unique([followerId, followingId], map: "Follow_followerId_followingId_key")
  @@index([followerId], map: "Follow_followerId_idx")
  @@index([followingId], map: "Follow_followingId_idx")
}

model stream {
  id                  String   @id
  name                String   @db.VarChar(255)
  thumbnailUrl        String?  @db.VarChar(255)
  ingressId           String?  @unique(map: "Stream_ingressId_key")
  serverUrl           String?  @db.VarChar(255)
  streamKey           String?  @db.VarChar(255)
  isLive              Boolean  @default(false)
  isChatEnabled       Boolean  @default(true)
  isChatDelayed       Boolean  @default(false)
  isChatFollowersOnly Boolean  @default(false)
  userId              String   @unique(map: "Stream_userId_key")
  createdAt           DateTime @default(now())
  updatedAt           DateTime

  @@index([ingressId], map: "Stream_ingressId_idx")
  @@index([name(length: 191)], map: "Stream_name_idx")
  @@index([userId], map: "Stream_userId_idx")
}

model user {
  id             String   @id
  username       String   @unique(map: "User_username_key")
  imageUrl       String   @db.VarChar(255)
  externalUserId String   @unique(map: "User_externalUserId_key")
  bio            String?  @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime
}
